<template>
  <div class="section">
    <div class="columns is-mobile">
      <div class="column is-full-mobile is-three-quarters-desktop">
        <h1 class="title is-3">{%Name%} {{ isNewResource ? 'cre&euml;en' : 'wijzigen'}}</h1>
        <hr>
        <form @submit.prevent="onSubmit" @input="form.errors.clear($event.target.name)">
{%Fields%}
          <hr>
          <b-field horizontal>
            <div class="field is-grouped">
              <div class="control">
                <button class="button is-primary" :disabled="form.errors.any()">Opslaan</button>
              </div>
              <div class="control">
                <a class="button is-text" @click="$router.go(-1)">Annuleren</a>
              </div>
            </div>
          </b-field>
        </form>
      </div>
    </div>
  </div>
</template>
<script>
  {%Imports%}

  const Form = Form ? Form : window.Form

  export default
  {
    name: "{%Model%}-form",
    props: ["id"],
    components: {{%Components%}},
    data () {
      return {
        is_new: true,
        baseResource: null,
        form: new Form({
          {%Columns%}
        }),{%RelationOptions%}{%PaletteOptions%}{%EditorOptions%}{%EditorConfig%}
      }
    },

    computed: {

      /**
       * Returns true if the current resource is a newly created resource, false if not.
       * @return Bool
       */
      isNewResource () {
        return this.is_new === true
      }
    },

    mounted () {
      this.id ? this.loadBaseResource() : this.getResources()
    },

    methods: {

      /**
       * Create a new {{%Model%}} resource or update an existing one.
       */
      onSubmit () {
        let method = this.isNewResource ? 'post' : 'put'
        let url = '{%Url%}' + (!this.isNewResource ? this.baseResource.id + '/' : '')

        this["$http"][method](url, this.form.all()).then(({data}) => {
          this.$buefy.toast.open({ type: 'is-success', message: data.message, duration: 5000 })
          this.$router.go(-1)
        }).catch(({response}) => {
          this.$buefy.toast.open({ type: 'is-danger', message: response.data.message, duration: 5000 })
          this.form.onFail(response.data.errors);
        })
      },

      /**
       * @autogenerated
       */
      loadBaseResource () {
        this.is_new = false
        this["$http"].get('{%Url%}' + this.id + '/')
          .then(({data}) => {
            this.baseResource = data.data.resource
            this.form.bind(data.data.resource)
            this.getResources()
          })
          .catch(({response}) => {
            this.$buefy.toast.open({ type: 'is-danger', message: '{%Model%} kon niet gevonden worden. De foutmelding is: '  + response.data.message, duration: 5000 })
            this.$router.go(-1)
          })
      },

      getResources () {
        {%ResourceList%}
      },
{%RelationMethods%}
{%Methods%}
  },
}
</script>
